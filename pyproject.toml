[project]
name = "vibectl"
version = "0.1.0"
description = "A vibes-based alternative to kubectl"
authors = [
    { name = "Daniel Klein", email = "othercriteria@gmail.com" }
]
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "kubernetes>=28.1.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.0",
    "llm>=0.13.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = { file = "LICENSE" }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "pydantic>=2.0.0",
    "types-PyYAML>=6.0.0",
    "virtualenv>=20.25.0",
]

[project.scripts]
vibectl = "vibectl.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "vibectl/**/*.py",
    "vibectl/**/*.pyi",
    "vibectl/py.typed",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-n auto --dist loadfile --cov=vibectl --cov-report=term --cov-report=xml"

[tool.coverage.run]
omit = ["*/__pycache__/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    # Hard to test system exit paths
    "sys\\.exit\\(1\\)",
    # Hard to test environment-dependent code
    "except \\(EOFError, KeyboardInterrupt\\)",
    "except \\(subprocess\\.CalledProcessError, FileNotFoundError\\)",
    "except OSError as e:"
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "RUF", # ruff-specific rules
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["vibectl"]
combine-as-imports = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]
mypy_path = "typings"

[[tool.mypy.overrides]]
module = ["kubernetes.*"]
ignore_missing_imports = true
