---
description: Python project setup
globs: ["*.py", "pyproject.toml", "flake.nix"]
alwaysApply: false
---
# Python Virtual Environment and Dependencies

Use venv and pyproject.toml for Python dependencies, not Flake.

<rule>
name: python_venv_deps
description: Enforces use of venv and pyproject.toml for Python dependency management
filters:
  # Match Python dependency management discussions
  - type: intent
    pattern: "python_dependency_management"
  # Match Python environment setup
  - type: intent
    pattern: "python_environment_setup"
  # Match Flake Python package references
  - type: content
    pattern: "python.pkgs\\.[a-zA-Z0-9_]+\\s+"
  # Match dependency discussions
  - type: content
    pattern: "(?i)\\b(dependencies|packages|requirements|pip)\\b"

actions:
  - type: guide
    message: |
      For Python dependency management:
      - Use pyproject.toml for all Python dependencies
      - Keep Flake buildInputs minimal (only virtualenv, pip)
      - Use [project.dependencies] for runtime dependencies
      - Use [project.optional-dependencies] for dev dependencies

  - type: suggest
    message: |
      Add dependencies to pyproject.toml, not Flake buildInputs.
      Use pip install -e ".[dev]" in the development shell.

examples:
  - input: "How do I add a new dependency?"
    output: "Add it to pyproject.toml under [project.dependencies] or [project.optional-dependencies], not to flake.nix buildInputs."

metadata:
  priority: high
  version: 1.1
  applies_to: ["*.py", "pyproject.toml", "flake.nix"]
</rule>
