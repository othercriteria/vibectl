apiVersion: apps/v1
kind: Deployment
metadata:
  name: vibectl-server
  labels:
    app: vibectl-server
    mode: acme
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vibectl-server
  template:
    metadata:
      labels:
        app: vibectl-server
        mode: acme
    spec:
      initContainers:
      # Config setup init container
      - name: config-init
        image: vibectl-server:local
        imagePullPolicy: Never
        command: ['sh', '-c']
        args:
          - |
            set -e
            echo "ðŸ“‹ Setting up writable config directory..."
            
            # Copy config to writable location
            cp /config-source/config.yaml /config-dest/config.yaml
            
            # Substitute ACME directory URL and domain using | as delimiter
            sed -i "s|\${ACME_DIRECTORY_URL}|$ACME_DIRECTORY_URL|g" /config-dest/config.yaml
            sed -i "s|\${ACME_DOMAIN_INTERNAL}|$ACME_DOMAIN_INTERNAL|g" /config-dest/config.yaml
            sed -i "s|\${ACME_DOMAIN_EXTERNAL}|$ACME_DOMAIN_EXTERNAL|g" /config-dest/config.yaml
            
            # Create certs directory for auto-generated certificates
            mkdir -p /config-dest/certs
            
            echo "âœ… Config setup complete"
            echo "ðŸ“‹ Final config:"
            cat /config-dest/config.yaml
        env:
        # ACME configuration from ConfigMap
        - name: ACME_DIRECTORY_URL
          valueFrom:
            configMapKeyRef:
              name: vibectl-server-acme-config
              key: directory-url
        - name: ACME_DOMAIN_INTERNAL
          valueFrom:
            configMapKeyRef:
              name: vibectl-server-acme-config
              key: acme-domain-internal
        - name: ACME_DOMAIN_EXTERNAL
          valueFrom:
            configMapKeyRef:
              name: vibectl-server-acme-config
              key: acme-domain-external
        volumeMounts:
        - name: config
          mountPath: /config-source
          readOnly: true
        - name: config-data
          mountPath: /config-dest

      # JWT token generation init container
      - name: jwt-init
        image: vibectl-server:local
        imagePullPolicy: Never
        command: ['sh', '-c']
        args:
          - |
            set -e
            echo "ðŸ”‘ Generating demo JWT token..."
            
            # Generate demo token valid for 7 days
            vibectl-server generate-token demo-user \
              --expires-in 7d \
              --output /jwt-data/demo-token.jwt
              
            echo "âœ… JWT token generated successfully"
            ls -la /jwt-data/
        env:
        # Use the JWT secret from the Secret volume
        - name: VIBECTL_JWT_SECRET_FILE
          value: /jwt-secret/jwt-secret
        volumeMounts:
        - name: jwt-data
          mountPath: /jwt-data
        - name: jwt-secret
          mountPath: /jwt-secret
          readOnly: true
        - name: config-data
          mountPath: /root/.config/vibectl/server

      containers:
      - name: vibectl-server
        image: vibectl-server:local
        command: ['sh', '-c']
        args:
        - |
          set -x
          echo "ðŸ“‹ Starting vibectl-server with config file..."
          echo "Configuration:"
          cat /root/.config/vibectl/server/config.yaml
          echo ""
          echo "Starting server with command:"
          vibectl-server serve --config /root/.config/vibectl/server/config.yaml
        env:
        # JWT secret configuration
        - name: VIBECTL_JWT_SECRET_FILE
          value: /jwt-secret/jwt-secret
        ports:
        - name: grpc-tls
          containerPort: 443
          protocol: TCP
        # Health checks for ACME mode
        livenessProbe:
          tcpSocket:
            port: 443
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 5
        readinessProbe:
          exec:
            command: ['cat', '/tmp/ready']
          initialDelaySeconds: 0
          periodSeconds: 2
          failureThreshold: 5
        volumeMounts:
        - name: config-data
          mountPath: /root/.config/vibectl/server
        - name: jwt-secret
          mountPath: /jwt-secret
          readOnly: true
        - name: jwt-data
          mountPath: /jwt-data
          readOnly: true
        - name: pebble-ca
          mountPath: /pebble-ca
          readOnly: true
        securityContext:
          # Run as root for port 443
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            add:
            - NET_BIND_SERVICE  # Allow binding to port 443
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

      volumes:
      - name: config
        configMap:
          name: vibectl-server-config
      - name: config-data
        emptyDir: {}
      - name: jwt-secret
        secret:
          secretName: vibectl-server-jwt
      - name: jwt-data
        emptyDir: {}
      - name: pebble-ca
        configMap:
          name: pebble-ca-cert

      # Security context for the pod
      securityContext:
        # Allow running as root for port 443 binding
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0 