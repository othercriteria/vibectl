apiVersion: v1
kind: ServiceAccount
metadata:
  name: red-agent
  namespace: chaos-monkey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: red-agent-role
rules:
# Core resources - Read-only cluster-wide (including quotas)
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "resourcequotas"]
  verbs: ["get", "list", "watch"]
# Workload resources - Read-only cluster-wide
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
# Allow creating new attack resources (like stress test pods) cluster-wide
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create"]
# Allow checking own RBAC permissions
- apiGroups: ["authorization.k8s.io"]
  resources: ["selfsubjectaccessreviews", "selfsubjectrulesreviews"]
  verbs: ["create"]
# Monitoring capabilities - Read-only nodes
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: red-agent-binding
subjects:
- kind: ServiceAccount
  name: red-agent
  namespace: chaos-monkey-system
roleRef:
  kind: ClusterRole
  name: red-agent-role
  apiGroup: rbac.authorization.k8s.io
---
# Special role for the services namespace with enhanced attack capabilities
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: red-agent-attack-services
  namespace: services
rules:
# Core resources - Full CRUD within services namespace (including quotas)
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "resourcequotas"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Workload resources - CRUD except deployment deletion within services namespace
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Allow scaling within services namespace
- apiGroups: ["apps"]
  resources: ["deployments/scale"]
  verbs: ["get", "update", "patch"]
# Allow exec/portforward within services namespace pods
- apiGroups: [""]
  resources: ["pods/exec", "pods/portforward"]
  verbs: ["create", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: red-agent-attack-services-binding
  namespace: services
subjects:
- kind: ServiceAccount
  name: red-agent
  namespace: chaos-monkey-system
roleRef:
  kind: Role
  name: red-agent-attack-services
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: red-agent-restricted
  namespace: protected
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: red-agent-restricted-binding
  namespace: protected
subjects:
- kind: ServiceAccount
  name: red-agent
  namespace: services
roleRef:
  kind: Role
  name: red-agent-restricted
  apiGroup: rbac.authorization.k8s.io
---
# No access to system-monitoring namespace resources
# Explicitly deny all permissions through an empty role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: red-agent-no-access
  namespace: system-monitoring
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: red-agent-no-access-binding
  namespace: system-monitoring
subjects:
- kind: ServiceAccount
  name: red-agent
  namespace: services
roleRef:
  kind: Role
  name: red-agent-no-access
  apiGroup: rbac.authorization.k8s.io
