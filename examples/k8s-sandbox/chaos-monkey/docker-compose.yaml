services:
  # Overseer service for dashboard and service tracking - starts first
  overseer:
    build:
      context: ./overseer
      dockerfile: Dockerfile
    container_name: chaos-monkey-overseer
    environment:
      - SESSION_DURATION=${SESSION_DURATION:-30}
      - VERBOSE=${VERBOSE:-false}
      - PORT=8080
      - HOST=0.0.0.0
      # Access to docker for monitoring
      - KIND_CONTAINER=chaos-monkey-control-plane
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - overseer-data:/app/data
      - kube-config:/config/kube:ro
    networks:
      - chaos-monkey-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  k8s-sandbox:
    build:
      context: ./k8s-sandbox
      dockerfile: Dockerfile
      args:
        DOCKER_GID: ${DOCKER_GID:-999}
    container_name: chaos-monkey-k8s-sandbox
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./k8s-sandbox/kubernetes:/kubernetes:ro
      - kube-config:/config/kube:rw
    environment:
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL:-claude-3.7-sonnet}
      - SESSION_DURATION=${SESSION_DURATION:-30}
      - VERBOSE=${VERBOSE:-false}
      - KIND_CONTAINER=chaos-monkey-control-plane
      - OVERSEER_HOST=overseer
      - OVERSEER_PORT=8080
    healthcheck:
      # Check both for nodes readiness AND deployed services availability
      test: ["CMD", "bash", "-c", "kubectl get nodes 2>/dev/null | grep -q Ready && kubectl get deployment app -n services 2>/dev/null | grep -q '1/1'"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - chaos-monkey-network
    hostname: k8s-sandbox
    dns_search: chaos-monkey-network
    depends_on:
      overseer:
        condition: service_healthy

  # Poller service for monitoring service availability
  poller:
    build:
      context: ./poller
      dockerfile: Dockerfile
    container_name: chaos-monkey-poller
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_healthy
    environment:
      - SESSION_DURATION=${SESSION_DURATION:-30}
      - POLL_INTERVAL_SECONDS=${POLL_INTERVAL_SECONDS:-15}
      - VERBOSE=${VERBOSE:-false}
      - KIND_CONTAINER=chaos-monkey-control-plane
      - OVERSEER_HOST=overseer
      - OVERSEER_PORT=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - kube-config:/config/kube:ro
    networks:
      - chaos-monkey-network

  blue-agent:
    build:
      context: .
      dockerfile: ./agent/Dockerfile
      args:
        VIBECTL_VERSION: "${VIBECTL_VERSION}"
        LLM_ANTHROPIC_VERSION: "${LLM_ANTHROPIC_VERSION}"
        ANTHROPIC_SDK_VERSION: "${ANTHROPIC_SDK_VERSION}"
        LLM_VERSION: "${LLM_VERSION}"
    container_name: chaos-monkey-blue-agent
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_started
    environment:
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL:-claude-3.7-sonnet}
      - SESSION_DURATION=${SESSION_DURATION:-30}
      - MEMORY_MAX_CHARS=${BLUE_MEMORY_MAX_CHARS:-2000}
      - ACTION_PAUSE_TIME=${BLUE_ACTION_PAUSE_TIME:-5}
      - VERBOSE=${VERBOSE:-false}
      - AGENT_ROLE=blue
      - AGENT_NAME=defender
      - MEMORY_INIT_FILE=/config/memory-init.txt
      - PLAYBOOK_FILE=/playbooks/defense-playbook.txt
      - CUSTOM_INSTRUCTIONS_FILE=/config/custom-instructions.txt
      - INITIAL_DELAY=30
      - OVERSEER_HOST=overseer
      - OVERSEER_PORT=8080
      - USE_STABLE_VERSIONS=${USE_STABLE_VERSIONS:-false}
    networks:
      - chaos-monkey-network
    volumes:
      - kube-config:/config/kube
      - ./agent/blue-memory-init.txt:/config/memory-init.txt:ro
      - ./agent/defense-playbook.txt:/playbooks/defense-playbook.txt:ro
      - ./agent/blue-custom-instructions.txt:/config/custom-instructions.txt:ro
      - ../../../:/vibectl-src:ro  # Mount repository root to use local vibectl code
    dns_search: chaos-monkey-network

  red-agent:
    build:
      context: .
      dockerfile: ./agent/Dockerfile
      args:
        VIBECTL_VERSION: "${VIBECTL_VERSION}"
        LLM_ANTHROPIC_VERSION: "${LLM_ANTHROPIC_VERSION}"
        ANTHROPIC_SDK_VERSION: "${ANTHROPIC_SDK_VERSION}"
        LLM_VERSION: "${LLM_VERSION}"
    container_name: chaos-monkey-red-agent
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_started
    environment:
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL:-claude-3.7-sonnet}
      - SESSION_DURATION=${SESSION_DURATION:-30}
      - MEMORY_MAX_CHARS=${RED_MEMORY_MAX_CHARS:-2000}
      - ACTION_PAUSE_TIME=${RED_ACTION_PAUSE_TIME:-5}
      - VERBOSE=${VERBOSE:-false}
      - AGENT_ROLE=red
      - AGENT_NAME=chaos-monkey
      - MEMORY_INIT_FILE=/config/memory-init.txt
      - PLAYBOOK_FILE=/playbooks/attack-playbook.txt
      - CUSTOM_INSTRUCTIONS_FILE=/config/custom-instructions.txt
      - INITIAL_DELAY=30
      - OVERSEER_HOST=overseer
      - OVERSEER_PORT=8080
      - USE_STABLE_VERSIONS=${USE_STABLE_VERSIONS:-false}
    networks:
      - chaos-monkey-network
    volumes:
      - kube-config:/config/kube
      - ./agent/red-memory-init.txt:/config/memory-init.txt:ro
      - ./agent/attack-playbook.txt:/playbooks/attack-playbook.txt:ro
      - ./agent/red-custom-instructions.txt:/config/custom-instructions.txt:ro
      - ../../../:/vibectl-src:ro  # Mount repository root to use local vibectl code
    dns_search: chaos-monkey-network

networks:
  chaos-monkey-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  kube-config:
  overseer-data:
