services:
  # Overseer service for dashboard and service tracking - starts first
  overseer:
    build:
      context: ./overseer
      dockerfile: Dockerfile
    container_name: chaos-monkey-overseer
    environment:
      - PASSIVE_DURATION=${PASSIVE_DURATION}
      - ACTIVE_DURATION=${ACTIVE_DURATION}
      - FLASK_ENV=production
      - VERBOSE=${VERBOSE}
      - PORT=8080
      - HOST=0.0.0.0
      # Configuration for overseer polling intervals and thresholds
      - METRICS_INTERVAL=${METRICS_INTERVAL:-1}
      - AGENT_LOG_INTERVAL=${AGENT_LOG_INTERVAL:-2}
      - CLUSTER_STATUS_INTERVAL=${CLUSTER_STATUS_INTERVAL:-2}
      - OVERVIEW_REFRESH_INTERVAL=${OVERVIEW_REFRESH_INTERVAL:-1}
      - STALE_THRESHOLD_SECONDS=${STALE_THRESHOLD_SECONDS:-30}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - overseer-data:/app/data
      - kube-config:/config/kube:ro
    networks:
      - chaos-monkey-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  k8s-sandbox:
    build:
      context: ./k8s-sandbox
      dockerfile: Dockerfile
      args:
        DOCKER_GID: ${DOCKER_GID:-999}
    container_name: chaos-monkey-k8s-sandbox
    privileged: true
    restart: "no"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./k8s-sandbox/kubernetes:/kubernetes:ro
      - kube-config:/config/kube:rw
    environment:
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL}
      - PASSIVE_DURATION=${PASSIVE_DURATION}
      - ACTIVE_DURATION=${ACTIVE_DURATION}
      - VERBOSE=${VERBOSE}
      - KIND_CONTAINER=chaos-monkey-control-plane
    healthcheck:
      # Check not just for node readiness, but also for agent kubeconfig files
      test: ["CMD", "bash", "-c", "kubectl get nodes 2>/dev/null | grep -q Ready && test -f /config/kube/blue-agent-config && test -f /config/kube/red-agent-config"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 90s # Keep start period relatively long to allow for setup
    networks:
      - chaos-monkey-network
    hostname: k8s-sandbox
    dns_search: chaos-monkey-network
    depends_on:
      overseer:
        condition: service_healthy

  # Poller service for monitoring service availability
  poller:
    build:
      context: ./poller
      dockerfile: Dockerfile
    container_name: chaos-monkey-poller
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_healthy
    environment:
      - KUBECONFIG=/config/kube/poller-config
      - POLLER_INTERVAL=${POLLER_INTERVAL:-1}
      - POLLER_HISTORY=${POLLER_HISTORY:-1000}
      - VERBOSE=${VERBOSE:-false}
      - KIND_CONTAINER=chaos-monkey-control-plane
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - kube-config:/config/kube:ro
    networks:
      - chaos-monkey-network

  blue-agent:
    build:
      context: .
      dockerfile: ./agent/Dockerfile
      args:
        VIBECTL_VERSION: "${VIBECTL_VERSION}"
        LLM_ANTHROPIC_VERSION: "${LLM_ANTHROPIC_VERSION}"
        ANTHROPIC_SDK_VERSION: "${ANTHROPIC_SDK_VERSION}"
        LLM_VERSION: "${LLM_VERSION}"
    container_name: chaos-monkey-blue-agent
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_started
    environment:
      - AGENT_ROLE=blue
      - AGENT_KUBECONFIG_PATH=/config/kube/blue-agent-config
      - PASSIVE_DURATION=${PASSIVE_DURATION}
      - ACTIVE_DURATION=${ACTIVE_DURATION}
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL}
      - MEMORY_MAX_CHARS=${BLUE_MEMORY_MAX_CHARS:-2500}
      - ACTION_PAUSE_TIME=${BLUE_ACTION_PAUSE_TIME:-2}
      - VERBOSE=${VERBOSE}
      - AGENT_NAME=defender
      - MEMORY_INIT_FILE=/config/memory-init.txt
      - PLAYBOOK_FILE=/playbooks/defense-playbook.txt
      - CUSTOM_INSTRUCTIONS_FILE=/config/custom-instructions.txt
      - USE_STABLE_VERSIONS=${USE_STABLE_VERSIONS}
    networks:
      - chaos-monkey-network
    volumes:
      - kube-config:/config/kube
      - ./agent/blue-memory-init.txt:/config/memory-init.txt:ro
      - ./agent/defense-playbook.txt:/playbooks/defense-playbook.txt:ro
      - ./agent/blue-custom-instructions.txt:/config/custom-instructions.txt:ro
      - ../../../:/vibectl-src:ro  # Mount repository root to use local vibectl code
    dns_search: chaos-monkey-network

  red-agent:
    build:
      context: .
      dockerfile: ./agent/Dockerfile
      args:
        VIBECTL_VERSION: "${VIBECTL_VERSION}"
        LLM_ANTHROPIC_VERSION: "${LLM_ANTHROPIC_VERSION}"
        ANTHROPIC_SDK_VERSION: "${ANTHROPIC_SDK_VERSION}"
        LLM_VERSION: "${LLM_VERSION}"
    container_name: chaos-monkey-red-agent
    depends_on:
      k8s-sandbox:
        condition: service_healthy
      overseer:
        condition: service_started
    environment:
      - AGENT_ROLE=red
      - AGENT_KUBECONFIG_PATH=/config/kube/red-agent-config
      - PASSIVE_DURATION=${PASSIVE_DURATION}
      - ACTIVE_DURATION=${ACTIVE_DURATION}
      - VIBECTL_ANTHROPIC_API_KEY=${VIBECTL_ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - VIBECTL_MODEL=${VIBECTL_MODEL}
      - MEMORY_MAX_CHARS=${RED_MEMORY_MAX_CHARS:-2500}
      - ACTION_PAUSE_TIME=${RED_ACTION_PAUSE_TIME:-2}
      - VERBOSE=${VERBOSE}
      - AGENT_NAME=chaos-monkey
      - MEMORY_INIT_FILE=/config/memory-init.txt
      - PLAYBOOK_FILE=/playbooks/attack-playbook.txt
      - CUSTOM_INSTRUCTIONS_FILE=/config/custom-instructions.txt
      - USE_STABLE_VERSIONS=${USE_STABLE_VERSIONS}
    networks:
      - chaos-monkey-network
    volumes:
      - kube-config:/config/kube
      - ./agent/red-memory-init.txt:/config/memory-init.txt:ro
      - ./agent/attack-playbook.txt:/playbooks/attack-playbook.txt:ro
      - ./agent/red-custom-instructions.txt:/config/custom-instructions.txt:ro
      - ../../../:/vibectl-src:ro  # Mount repository root to use local vibectl code
    dns_search: chaos-monkey-network

networks:
  chaos-monkey-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  kube-config:
  overseer-data:
